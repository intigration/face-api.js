{"version":3,"sources":["webpack:///./src/pages/face_expression_recognition.tsx","webpack:///./src/components/ImageSelection.tsx","webpack:///./src/components/SelectableImage.tsx","webpack:///./src/components/FaceDetection.tsx","webpack:///./src/components/TrackFaces.tsx","webpack:///./src/components/TrackFacesWithExpressions.tsx"],"names":["state","render","window","document","EXAMPLE_IMAGES_FACE_EXPRESSIONS","concat","EXAMPLE_IMAGES","url","input","img","overlay","setState","SelectionTypes","BOTH","maxWidth","MODELS_URI","FACE_DETECTORS","TinyFaceDetectorOptions","inputSize","detectionOptions","withBoxes","React","ImageSelection","items","selectedImage","onChange","e","target","value","map","item","label","Container","styled","div","Margin","SelectableImage","props","imageSrc","initialImageSrc","onChangeSelection","bind","onLoadFromDisk","file","files","reader","FileReader","onload","loadEvent","result","readAsDataURL","selectionType","imageStyle","SELECT","FILE","imgId","display","defaultProps","FaceDetection","initialFaceDetector","initialTinyFaceDetectorOptions","detectorName","renderFaceDetectorSelection","renderFaceDetectorControls","getFaceDetectionModelUri","renderCheckboxes","children","TrackFaces","isActive","run","setTimeout","runTask","results","displayResults","displayOptions","componentDidMount","componentWillUnmount","TrackFacesWithExpressions","withScore","faceapi","element","withFaceExpressions"],"mappings":"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","file":"component---src-pages-face-expression-recognition-tsx-077022e6f2f75c94a289.js","sourcesContent":["import { TinyFaceDetectorOptions } from 'face-api.js';\nimport * as React from 'react';\n\nimport { LoadModels } from '../../face-api.js-react/facc/LoadModels';\nimport { MediaElement } from '../../face-api.js-react/MediaElement';\nimport { FaceDetection } from '../components/FaceDetection';\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\nimport { TrackFacesWithExpressions } from '../components/TrackFacesWithExpressions';\nimport { EXAMPLE_IMAGES, EXAMPLE_IMAGES_FACE_EXPRESSIONS, FACE_DETECTORS, MODELS_URI } from '../const';\nimport { Root } from '../Root';\n\ntype PageState = {\n  input?: MediaElement\n  overlay?: HTMLCanvasElement\n}\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SelectableImage\n          items={EXAMPLE_IMAGES_FACE_EXPRESSIONS.concat(EXAMPLE_IMAGES)}\n          initialImageSrc={EXAMPLE_IMAGES_FACE_EXPRESSIONS[0].url}\n          onLoaded={({ img: input, overlay }) => this.setState({ input, overlay })}\n          selectionType={SelectionTypes.BOTH}\n          imageStyle={{ maxWidth: 800 }}\n          imgId=\"img\"\n        />\n        <LoadModels\n          ssdMobilenetv1ModelUrl={MODELS_URI}\n          faceExpessionModelUrl={MODELS_URI}\n        >\n        {\n          () =>\n            <FaceDetection\n              {...this.state}\n              initialFaceDetector={FACE_DETECTORS[1]}\n              initialTinyFaceDetectorOptions={new TinyFaceDetectorOptions({ inputSize: 512 })}\n            >\n            {(detectionOptions, withBoxes) =>\n              <TrackFacesWithExpressions\n                detectionOptions={detectionOptions}\n                withBoxes={withBoxes}\n                {...this.state}\n              />\n            }\n            </FaceDetection>\n        }\n        </LoadModels>\n      </Root>\n    )\n  }\n}","import { FormControl, FormHelperText, Input, MenuItem, Select } from '@material-ui/core';\nimport * as React from 'react';\n\nexport type ImageSelectionItem = {\n  url: string\n  label: string\n}\n\ntype ImageSelectionProps = {\n  items: ImageSelectionItem[]\n  selectedImage: string\n  onChange: (value: string) => void\n}\n\nexport const ImageSelection = ({ items, selectedImage, onChange }: ImageSelectionProps) =>\n  <FormControl>\n    <Select\n      value={selectedImage}\n      onChange={e => onChange(e.target.value)}\n      input={<Input />}\n    >\n      {\n        items.map(item =>\n          <MenuItem\n            key={item.url}\n            value={item.url}\n          >\n            { item.label }\n          </MenuItem>\n        )\n      }\n    </Select>\n    <FormHelperText>Pick an image</FormHelperText>\n  </FormControl>","import * as Mui from '@material-ui/core';\nimport { MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { ImageWithOverlay } from '../../face-api.js-react';\nimport { SideBySide } from '../styled/SideBySide';\nimport { ImageSelection, ImageSelectionItem } from './ImageSelection';\n\nconst Container = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Margin = styled.div`\n  margin: 10px;\n`\n\n\nexport enum SelectionTypes {\n  SELECT = 'SELECT',\n  FILE = 'FILE',\n  BOTH = 'BOTH'\n}\n\nexport type SelectableImageProps = {\n  onLoaded: (refs: { img: MediaElement, overlay: HTMLCanvasElement}) => any\n  imgId: string\n  items?: ImageSelectionItem[]\n  initialImageSrc?: string\n  selectionType?: SelectionTypes\n  imageStyle?: React.CSSProperties\n}\n\nexport type SelectableImageState = {\n  imageSrc: string\n}\n\nexport class SelectableImage extends React.Component<SelectableImageProps, SelectableImageState> {\n  static defaultProps: Partial<SelectableImageProps> = {\n    selectionType: SelectionTypes.SELECT\n  }\n\n  constructor(props: SelectableImageProps) {\n    super(props)\n\n    this.state = {\n      imageSrc: props.initialImageSrc\n    }\n\n    this.onChangeSelection = this.onChangeSelection.bind(this)\n    this.onLoadFromDisk = this.onLoadFromDisk.bind(this)\n  }\n\n  onChangeSelection(imageSrc: string) {\n    this.setState({\n      imageSrc\n    })\n  }\n\n  onLoadFromDisk(e: any) {\n    const file = (e.target.files || [])[0]\n    if (!file) {\n      return\n    }\n\n    const reader = new FileReader()\n\n    reader.onload = (loadEvent: any) =>\n    this.setState({\n      imageSrc: loadEvent.target.result\n    })\n\n    reader.readAsDataURL(e.target.files[0])\n  }\n\n  render() {\n    const { selectionType } = this.props\n    return (\n      <Container>\n        <ImageWithOverlay\n          {...this.props}\n          imageSrc={this.state.imageSrc}\n          imageStyle={this.props.imageStyle}\n        />\n        <SideBySide>\n        {\n          (selectionType === SelectionTypes.SELECT || selectionType === SelectionTypes.BOTH)\n            &&\n            <Margin>\n              <ImageSelection\n                items={this.props.items}\n                selectedImage={this.state.imageSrc}\n                onChange={this.onChangeSelection}\n              />\n            </Margin>\n        }\n        {\n          (selectionType === SelectionTypes.FILE || selectionType === SelectionTypes.BOTH)\n            &&\n            <Margin>\n              <input\n                accept=\"image/*\"\n                id={this.props.imgId}\n                multiple\n                style={{ display: 'none' }}\n                onChange={this.onLoadFromDisk}\n                type=\"file\"\n              />\n              <label htmlFor={this.props.imgId}>\n                <Mui.Button variant=\"outlined\" component=\"span\">\n                  From Disk\n                </Mui.Button>\n              </label>\n            </Margin>\n        }\n        </SideBySide>\n      </Container>\n    )\n  }\n}","import * as Mui from '@material-ui/core';\r\nimport { FaceDetectionOptions, TinyFaceDetectorOptions } from 'face-api.js';\r\nimport { LoadModels } from 'face-api.js-react';\r\nimport * as React from 'react';\r\n\r\nimport { ReactElement } from '../../face-api.js-react';\r\nimport { ModalLoader } from '../components/ModalLoader';\r\nimport { getFaceDetectionModelUri, MODELS_URI } from '../const';\r\nimport { SelectFaceDetector } from '../facc/SelectFaceDetector';\r\nimport { CenterContent } from '../styled/CenterContent';\r\n\r\n\r\ntype Props = {\r\n  initialFaceDetector: string\r\n  initialTinyFaceDetectorOptions?: TinyFaceDetectorOptions\r\n  children?: (detectionOptions: FaceDetectionOptions, withBoxes: boolean) => ReactElement\r\n  renderCheckboxes?: () => ReactElement\r\n}\r\n\r\ntype FaceDetectionState = {\r\n  withBoxes: boolean\r\n}\r\n\r\nexport class FaceDetection extends React.Component<Props, FaceDetectionState> {\r\n\r\n  state: FaceDetectionState = {\r\n    withBoxes: true\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <SelectFaceDetector\r\n        initialFaceDetector={this.props.initialFaceDetector}\r\n        initialTinyFaceDetectorOptions={this.props.initialTinyFaceDetectorOptions}\r\n      >\r\n      {(detectorName, detectionOptions, renderFaceDetectorSelection, renderFaceDetectorControls) =>\r\n        <LoadModels\r\n          {...getFaceDetectionModelUri(detectorName, MODELS_URI)}\r\n          faceLandmarkModelUrl={MODELS_URI}\r\n          renderBusyComponent={() => <ModalLoader title={`Loading ${detectorName} Model`} />}\r\n        >\r\n        {() =>\r\n          <div>\r\n            <CenterContent>\r\n              { renderFaceDetectorSelection() }\r\n              <CenterContent flexDirection=\"column\" alignItems=\"baseline\">\r\n                {\r\n                  this.props.renderCheckboxes ? this.props.renderCheckboxes() : null\r\n                }\r\n                <Mui.FormControlLabel\r\n                  control={\r\n                    <Mui.Checkbox\r\n                      checked={!this.state.withBoxes}\r\n                      onChange={() => this.setState({ withBoxes: !this.state.withBoxes })}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Hide Bounding Boxes\"\r\n                />\r\n                </CenterContent>\r\n            </CenterContent>\r\n            { renderFaceDetectorControls() }\r\n            { this.props.children ? this.props.children(detectionOptions, this.state.withBoxes) : null }\r\n          </div>\r\n        }\r\n        </LoadModels>\r\n      }\r\n      </SelectFaceDetector>\r\n    )\r\n  }\r\n}\r\n","import * as faceapi from 'face-api.js';\r\nimport * as React from 'react';\r\n\r\nimport { displayResults } from '../../face-api.js-react';\r\nimport { DisplayResultsOptions } from '../../face-api.js-react/displayResults';\r\nimport { MediaElement } from '../../face-api.js-react/MediaElement';\r\n\r\nexport type TrackFacesProps = {\r\n  input?: MediaElement\r\n  overlay?: HTMLCanvasElement\r\n  displayOptions?: DisplayResultsOptions\r\n  runTask: () => Promise<\r\n    faceapi.FaceDetection[]\r\n    | faceapi.WithFaceLandmarks<faceapi.WithFaceDetection<{}>>[]\r\n    | faceapi.WithFaceExpressions<faceapi.WithFaceDetection<{}>>[]\r\n  >\r\n}\r\n\r\nexport class TrackFaces extends React.Component<TrackFacesProps> {\r\n\r\n  isActive: boolean = false\r\n\r\n  run = async () => {\r\n    if (!this.isActive) {\r\n      return\r\n    }\r\n\r\n    if (!this.props.input) {\r\n      return setTimeout(this.run, 0)\r\n    }\r\n\r\n    const results = await this.props.runTask()\r\n    displayResults(this.props.input, this.props.overlay, results, this.props.displayOptions)\r\n\r\n    setTimeout(this.run, 0)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.isActive = true\r\n    this.run()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false\r\n  }\r\n\r\n  public render(): any {\r\n    return null\r\n  }\r\n}","import * as faceapi from 'face-api.js';\r\nimport * as React from 'react';\r\n\r\nimport { MediaElement } from '../../face-api.js-react';\r\nimport { FaceDetectionOptions } from 'face-api.js';\r\nimport { TrackFaces } from './TrackFaces';\r\n\r\nexport type TrackFacesWithExpressionsProps = {\r\n  input?: MediaElement\r\n  detectionOptions: FaceDetectionOptions\r\n  withBoxes: boolean\r\n}\r\n\r\nexport class TrackFacesWithExpressions extends React.Component<TrackFacesWithExpressionsProps> {\r\n  public render(): any {\r\n    const { withBoxes } = this.props\r\n    return (\r\n      <TrackFaces\r\n        {...this.props}\r\n        displayOptions={{ withBoxes, withScore: false }}\r\n        runTask={async () => faceapi.detectAllFaces(this.props.input.element, this.props.detectionOptions).withFaceExpressions()}\r\n      />\r\n    )\r\n  }\r\n}"],"sourceRoot":""}