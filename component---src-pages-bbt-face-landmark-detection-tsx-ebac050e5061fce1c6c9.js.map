{"version":3,"sources":["webpack:///./src/pages/bbt_face_landmark_detection.tsx"],"names":["state","drawLines","toggleDrawLines","setState","onTabIndexChanged","inputImg","undefined","render","window","document","MODELS_URI","ALIGNED_FACE_IMAGES","url","img","overlay","SelectionTypes","SELECT","maxWidth","faceLandmarks","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;UAUEA,K,GAAmB;AACjBC,eAAS,EAAE;AADM,K;;UAInBC,e,GAAkB,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEF,iBAAS,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAAzB,OAAd;AACD,K;;UAEDG,iB,GAAoB,YAAM;AACxB,YAAKD,QAAL,CAAc;AAAEE,gBAAQ,EAAEC;AAAZ,OAAd;AACD,K;;;;;;;SAEMC,M,GAAP,kBAAgB;AAAA;;AACd,QAAI,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAA1C,CAAJ,EAAyD;AACvD,aAAO,IAAP;AACD;;AAED,WACE,oDAAC,kDAAD,QACE,oDAAC,4DAAD;AACE,0BAAoB,EAAEC,yDAAUA;AADlC,OAGC;AAAA,aACC,iEACE,oDAAC,mFAAD;AACE,aAAK,EAAEC,kEADT;AAEE,uBAAe,EAAEA,kEAAmB,CAAC,EAAD,CAAnB,CAAwBC,GAF3C;AAGE,gBAAQ,EAAE;AAAA,cAAQP,QAAR,QAAGQ,GAAH;AAAA,cAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,iBAAgC,MAAI,CAACX,QAAL,CAAc;AAAEE,oBAAQ,EAARA,QAAF;AAAYS,mBAAO,EAAPA;AAAZ,WAAd,CAAhC;AAAA,SAHZ;AAIE,qBAAa,EAAEC,kFAAc,CAACC,MAJhC;AAKE,kBAAU,EAAE;AAAEC,kBAAQ,EAAE;AAAZ,SALd;AAME,aAAK,EAAC;AANR,QADF,EASE,oDAAC,uGAAD;AAAqB,aAAK,EAAE,MAAI,CAACjB,KAAL,CAAWK;AAAvC,SACC;AAAA,YAAGa,aAAH,SAAGA,aAAH;AAAA,eACC,oDAAC,kGAAD;AACE,eAAK,EAAE,MAAI,CAAClB,KAAL,CAAWK,QADpB;AAEE,iBAAO,EAAE,CAACa,aAAD,CAFX;AAGE,iBAAO,EAAE,MAAI,CAAClB,KAAL,CAAWc,OAHtB;AAIE,+BAAqB,EAAE;AAAEb,qBAAS,EAAE,MAAI,CAACD,KAAL,CAAWC;AAAxB;AAJzB,UADD;AAAA,OADD,CATF,CADD;AAAA,KAHD,CADF,EA4BE,oDAAC,mEAAD,QACE,oDAAC,0EAAD;AACE,aAAO,EACL,oDAAC,kEAAD;AACE,eAAO,EAAE,KAAKD,KAAL,CAAWC,SADtB;AAEE,gBAAQ,EAAE,KAAKC,eAFjB;AAGE,aAAK,EAAC;AAHR,QAFJ;AAQE,WAAK,EAAC;AARR,MADF,CA5BF,CADF;AA4CD,G;;;EA/D0BiB,+C","file":"component---src-pages-bbt-face-landmark-detection-tsx-ebac050e5061fce1c6c9.js","sourcesContent":["import * as Mui from '@material-ui/core';\nimport { LoadModels, MediaElement } from 'face-api.js-react';\nimport { DisplayResults } from 'face-api.js-react/components/DisplayResults';\nimport * as React from 'react';\n\nimport { DetectFaceLandmarks } from '../../face-api.js-react/facc/DetectFaceLandmarks';\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\nimport { ALIGNED_FACE_IMAGES, MODELS_URI } from '../const';\nimport { Root } from '../Root';\nimport { MarginTop } from '../styled/MarginTop';\n\ntype PageState = {\n  drawLines: boolean\n  inputImg?: MediaElement\n  overlay?: HTMLCanvasElement\n}\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n    drawLines: true\n  }\n\n  toggleDrawLines = () => {\n    this.setState({ drawLines: !this.state.drawLines })\n  }\n\n  onTabIndexChanged = () => {\n    this.setState({ inputImg: undefined })\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <LoadModels\n          faceLandmarkModelUrl={MODELS_URI}\n        >\n        {() =>\n          <div>\n            <SelectableImage\n              items={ALIGNED_FACE_IMAGES}\n              initialImageSrc={ALIGNED_FACE_IMAGES[30].url}\n              onLoaded={({ img: inputImg, overlay }) => this.setState({ inputImg, overlay })}\n              selectionType={SelectionTypes.SELECT}\n              imageStyle={{ maxWidth: 150 }}\n              imgId=\"img\"\n            />\n            <DetectFaceLandmarks input={this.state.inputImg}>\n            {({ faceLandmarks }) =>\n              <DisplayResults\n                input={this.state.inputImg}\n                results={[faceLandmarks]}\n                overlay={this.state.overlay}\n                displayResultsOptions={{ drawLines: this.state.drawLines }}\n              />\n            }\n            </DetectFaceLandmarks>\n          </div>\n        }\n        </LoadModels>\n\n        <MarginTop>\n          <Mui.FormControlLabel\n            control={\n              <Mui.Checkbox\n                checked={this.state.drawLines}\n                onChange={this.toggleDrawLines}\n                color=\"primary\"\n              />\n            }\n            label=\"Draw Lines\"\n          />\n        </MarginTop>\n\n      </Root>\n    )\n  }\n}"],"sourceRoot":""}