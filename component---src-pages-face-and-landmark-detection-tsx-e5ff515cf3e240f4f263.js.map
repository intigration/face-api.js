{"version":3,"sources":["webpack:///./face-api.js-react/facc/DetectFacesWithLandmarks.tsx","webpack:///./src/pages/face_and_landmark_detection.tsx","webpack:///./src/components/ImageSelection.tsx","webpack:///./src/components/SelectableImage.tsx","webpack:///./src/components/FaceDetection.tsx","webpack:///./src/components/FaceAndLandmarkDetection.tsx"],"names":["detectFacesWithLandmarks","props","input","faceapi","element","detectionOptions","withFaceLandmarks","faceDetectionsWithLandmarks","DetectFacesWithLandmarks","withAsyncRendering","state","render","window","document","EXAMPLE_IMAGES","url","img","overlay","setState","SelectionTypes","BOTH","maxWidth","FACE_DETECTORS","withBoxes","withLandmarks","faceDetections","React","ImageSelection","items","selectedImage","onChange","e","target","value","map","item","label","Container","styled","div","Margin","SelectableImage","imageSrc","initialImageSrc","onChangeSelection","bind","onLoadFromDisk","file","files","reader","FileReader","onload","loadEvent","result","readAsDataURL","selectionType","imageStyle","SELECT","FILE","imgId","display","defaultProps","FaceDetection","initialFaceDetector","initialTinyFaceDetectorOptions","detectorName","renderFaceDetectorSelection","renderFaceDetectorControls","getFaceDetectionModelUri","MODELS_URI","renderCheckboxes","children","FaceAndLandmarkDetection"],"mappings":"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","file":"component---src-pages-face-and-landmark-detection-tsx-e5ff515cf3e240f4f263.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { MediaElement } from '../MediaElement';\nimport { FaceDetectionOptions, FaceDetectionWithLandmarks } from 'face-api.js';\n\nexport interface DetectFacesWithLandmarksProps {\n  detectionOptions: FaceDetectionOptions\n  input?: MediaElement\n}\n\nexport interface DetectFacesWithLandmarksState {\n  faceDetectionsWithLandmarks?: FaceDetectionWithLandmarks[]\n}\n\nasync function detectFacesWithLandmarks(props: DetectFacesWithLandmarksProps) {\n\n  if (!props.input) {\n    return null\n  }\n\n  return {\n    faceDetectionsWithLandmarks: await faceapi.detectAllFaces(props.input.element, props.detectionOptions).withFaceLandmarks()\n  }\n}\n\nexport const DetectFacesWithLandmarks =\n  withAsyncRendering<DetectFacesWithLandmarksProps, DetectFacesWithLandmarksState>(detectFacesWithLandmarks)\n","import { DisplayResults } from 'face-api.js-react/components/DisplayResults';\nimport * as React from 'react';\n\nimport { DetectFaces } from '../../face-api.js-react/facc/DetectFaces';\nimport { DetectFacesWithLandmarks } from '../../face-api.js-react/facc/DetectFacesWithLandmarks';\nimport { FaceAndLandmarkDetection, FaceAndLandmarkDetectionProps } from '../components/FaceAndLandmarkDetection';\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\nimport { EXAMPLE_IMAGES, FACE_DETECTORS } from '../const';\nimport { Root } from '../Root';\n\ntype PageState = FaceAndLandmarkDetectionProps\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SelectableImage\n          items={EXAMPLE_IMAGES}\n          initialImageSrc={EXAMPLE_IMAGES[0].url}\n          onLoaded={({ img: input, overlay }) => this.setState({ input, overlay })}\n          selectionType={SelectionTypes.BOTH}\n          imageStyle={{ maxWidth: 800 }}\n          imgId=\"img\"\n        />\n        <FaceAndLandmarkDetection\n          {...this.state}\n          initialFaceDetector={FACE_DETECTORS[1]}\n        >\n        {(detectionOptions, withBoxes, withLandmarks) =>\n          withLandmarks\n            ?\n              <DetectFacesWithLandmarks\n                input={this.state.input}\n                detectionOptions={detectionOptions}\n              >\n              {({ faceDetectionsWithLandmarks }) =>\n                <DisplayResults\n                  input={this.state.input}\n                  overlay={this.state.overlay}\n                  results={faceDetectionsWithLandmarks}\n                  displayResultsOptions={{ withBoxes }}\n                />\n              }\n              </DetectFacesWithLandmarks>\n            :\n              <DetectFaces\n                input={this.state.input}\n                detectionOptions={detectionOptions}\n              >\n              {({ faceDetections }) =>\n                <DisplayResults\n                  input={this.state.input}\n                  overlay={this.state.overlay}\n                  results={faceDetections}\n                  displayResultsOptions={{ withBoxes }}\n                />\n              }\n              </DetectFaces>\n        }\n        </FaceAndLandmarkDetection>\n      </Root>\n    )\n  }\n}","import { FormControl, FormHelperText, Input, MenuItem, Select } from '@material-ui/core';\nimport * as React from 'react';\n\nexport type ImageSelectionItem = {\n  url: string\n  label: string\n}\n\ntype ImageSelectionProps = {\n  items: ImageSelectionItem[]\n  selectedImage: string\n  onChange: (value: string) => void\n}\n\nexport const ImageSelection = ({ items, selectedImage, onChange }: ImageSelectionProps) =>\n  <FormControl>\n    <Select\n      value={selectedImage}\n      onChange={e => onChange(e.target.value)}\n      input={<Input />}\n    >\n      {\n        items.map(item =>\n          <MenuItem\n            key={item.url}\n            value={item.url}\n          >\n            { item.label }\n          </MenuItem>\n        )\n      }\n    </Select>\n    <FormHelperText>Pick an image</FormHelperText>\n  </FormControl>","import * as Mui from '@material-ui/core';\nimport { MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { ImageWithOverlay } from '../../face-api.js-react';\nimport { SideBySide } from '../styled/SideBySide';\nimport { ImageSelection, ImageSelectionItem } from './ImageSelection';\n\nconst Container = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Margin = styled.div`\n  margin: 10px;\n`\n\n\nexport enum SelectionTypes {\n  SELECT = 'SELECT',\n  FILE = 'FILE',\n  BOTH = 'BOTH'\n}\n\nexport type SelectableImageProps = {\n  onLoaded: (refs: { img: MediaElement, overlay: HTMLCanvasElement}) => any\n  imgId: string\n  items?: ImageSelectionItem[]\n  initialImageSrc?: string\n  selectionType?: SelectionTypes\n  imageStyle?: React.CSSProperties\n}\n\nexport type SelectableImageState = {\n  imageSrc: string\n}\n\nexport class SelectableImage extends React.Component<SelectableImageProps, SelectableImageState> {\n  static defaultProps: Partial<SelectableImageProps> = {\n    selectionType: SelectionTypes.SELECT\n  }\n\n  constructor(props: SelectableImageProps) {\n    super(props)\n\n    this.state = {\n      imageSrc: props.initialImageSrc\n    }\n\n    this.onChangeSelection = this.onChangeSelection.bind(this)\n    this.onLoadFromDisk = this.onLoadFromDisk.bind(this)\n  }\n\n  onChangeSelection(imageSrc: string) {\n    this.setState({\n      imageSrc\n    })\n  }\n\n  onLoadFromDisk(e: any) {\n    const file = (e.target.files || [])[0]\n    if (!file) {\n      return\n    }\n\n    const reader = new FileReader()\n\n    reader.onload = (loadEvent: any) =>\n    this.setState({\n      imageSrc: loadEvent.target.result\n    })\n\n    reader.readAsDataURL(e.target.files[0])\n  }\n\n  render() {\n    const { selectionType } = this.props\n    return (\n      <Container>\n        <ImageWithOverlay\n          {...this.props}\n          imageSrc={this.state.imageSrc}\n          imageStyle={this.props.imageStyle}\n        />\n        <SideBySide>\n        {\n          (selectionType === SelectionTypes.SELECT || selectionType === SelectionTypes.BOTH)\n            &&\n            <Margin>\n              <ImageSelection\n                items={this.props.items}\n                selectedImage={this.state.imageSrc}\n                onChange={this.onChangeSelection}\n              />\n            </Margin>\n        }\n        {\n          (selectionType === SelectionTypes.FILE || selectionType === SelectionTypes.BOTH)\n            &&\n            <Margin>\n              <input\n                accept=\"image/*\"\n                id={this.props.imgId}\n                multiple\n                style={{ display: 'none' }}\n                onChange={this.onLoadFromDisk}\n                type=\"file\"\n              />\n              <label htmlFor={this.props.imgId}>\n                <Mui.Button variant=\"outlined\" component=\"span\">\n                  From Disk\n                </Mui.Button>\n              </label>\n            </Margin>\n        }\n        </SideBySide>\n      </Container>\n    )\n  }\n}","import * as Mui from '@material-ui/core';\r\nimport { FaceDetectionOptions, TinyFaceDetectorOptions } from 'face-api.js';\r\nimport { LoadModels } from 'face-api.js-react';\r\nimport * as React from 'react';\r\n\r\nimport { ReactElement } from '../../face-api.js-react';\r\nimport { ModalLoader } from '../components/ModalLoader';\r\nimport { getFaceDetectionModelUri, MODELS_URI } from '../const';\r\nimport { SelectFaceDetector } from '../facc/SelectFaceDetector';\r\nimport { CenterContent } from '../styled/CenterContent';\r\n\r\n\r\ntype Props = {\r\n  initialFaceDetector: string\r\n  initialTinyFaceDetectorOptions?: TinyFaceDetectorOptions\r\n  children?: (detectionOptions: FaceDetectionOptions, withBoxes: boolean) => ReactElement\r\n  renderCheckboxes?: () => ReactElement\r\n}\r\n\r\ntype FaceDetectionState = {\r\n  withBoxes: boolean\r\n}\r\n\r\nexport class FaceDetection extends React.Component<Props, FaceDetectionState> {\r\n\r\n  state: FaceDetectionState = {\r\n    withBoxes: true\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <SelectFaceDetector\r\n        initialFaceDetector={this.props.initialFaceDetector}\r\n        initialTinyFaceDetectorOptions={this.props.initialTinyFaceDetectorOptions}\r\n      >\r\n      {(detectorName, detectionOptions, renderFaceDetectorSelection, renderFaceDetectorControls) =>\r\n        <LoadModels\r\n          {...getFaceDetectionModelUri(detectorName, MODELS_URI)}\r\n          faceLandmarkModelUrl={MODELS_URI}\r\n          renderBusyComponent={() => <ModalLoader title={`Loading ${detectorName} Model`} />}\r\n        >\r\n        {() =>\r\n          <div>\r\n            <CenterContent>\r\n              { renderFaceDetectorSelection() }\r\n              <CenterContent flexDirection=\"column\" alignItems=\"baseline\">\r\n                {\r\n                  this.props.renderCheckboxes ? this.props.renderCheckboxes() : null\r\n                }\r\n                <Mui.FormControlLabel\r\n                  control={\r\n                    <Mui.Checkbox\r\n                      checked={!this.state.withBoxes}\r\n                      onChange={() => this.setState({ withBoxes: !this.state.withBoxes })}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Hide Bounding Boxes\"\r\n                />\r\n                </CenterContent>\r\n            </CenterContent>\r\n            { renderFaceDetectorControls() }\r\n            { this.props.children ? this.props.children(detectionOptions, this.state.withBoxes) : null }\r\n          </div>\r\n        }\r\n        </LoadModels>\r\n      }\r\n      </SelectFaceDetector>\r\n    )\r\n  }\r\n}\r\n","import * as Mui from '@material-ui/core';\r\nimport { FaceDetectionOptions, TinyFaceDetectorOptions } from 'face-api.js';\r\nimport { MediaElement } from 'face-api.js-react';\r\nimport * as React from 'react';\r\n\r\nimport { ReactElement } from '../../face-api.js-react';\r\nimport { FaceDetection } from './FaceDetection';\r\n\r\nexport type FaceAndLandmarkDetectionProps = {\r\n  input?: MediaElement\r\n  overlay?: HTMLCanvasElement\r\n}\r\n\r\ntype Props = FaceAndLandmarkDetectionProps & {\r\n  initialFaceDetector: string\r\n  initialTinyFaceDetectorOptions?: TinyFaceDetectorOptions\r\n  children?: (detectionOptions: FaceDetectionOptions, withBoxes: boolean, withLandmarks: boolean) => ReactElement\r\n}\r\n\r\ntype FaceAndLandmarkDetectionState = {\r\n  withLandmarks: boolean\r\n}\r\n\r\nexport class FaceAndLandmarkDetection extends React.Component<Props, FaceAndLandmarkDetectionState> {\r\n\r\n  state: FaceAndLandmarkDetectionState = {\r\n    withLandmarks: false\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <FaceDetection\r\n        {...this.props}\r\n        renderCheckboxes={\r\n          () =>\r\n            <Mui.FormControlLabel\r\n              control={\r\n                <Mui.Checkbox\r\n                  checked={this.state.withLandmarks}\r\n                  onChange={() => this.setState({ withLandmarks: !this.state.withLandmarks })}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Detect Face Landmarks\"\r\n            />\r\n        }\r\n      >\r\n        {\r\n          (detectionOptions, withBoxes) =>\r\n            this.props.children(detectionOptions, withBoxes, this.state.withLandmarks)\r\n        }\r\n      </FaceDetection>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}