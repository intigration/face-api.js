{"version":3,"sources":["webpack:///./src/components/FaceSimilarity.tsx","webpack:///./src/pages/bbt_face_similarity.tsx","webpack:///./src/components/ModalLoader.tsx"],"names":["FaceSimilarity","props","text","backgroundColor","isMatch","state","render","window","document","ALIGNED_FACE_IMAGES","url","inputImg1","img","setState","maxWidth","inputImg2","MODELS_URI","faceDescriptors","distance","faceapi","React","ModalLoader","title"],"mappings":"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","file":"component---src-pages-bbt-face-similarity-tsx-0faec959c9357f247f79.js","sourcesContent":["import { FormControl, Input, InputLabel } from '@material-ui/core';\nimport * as React from 'react';\n\nexport type FaceSimilarityProps = {\n  text: string\n  isMatch: boolean\n}\n\nexport const FaceSimilarity = (props: FaceSimilarityProps) =>\n  <FormControl>\n    <InputLabel htmlFor=\"distance\">\n      Distance:\n    </InputLabel>\n    <Input\n      id=\"distance\"\n      value={props.text}\n      style={{ backgroundColor: props.isMatch ? '#b2ff59' : '#ea605d' }}\n    />\n  </FormControl>\n","import * as faceapi from 'face-api.js';\nimport { ComputeFaceDescriptors, LoadModels, MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\n\nimport { FaceSimilarity } from '../components/FaceSimilarity';\nimport { ModalLoader } from '../components/ModalLoader';\nimport { SelectableImage } from '../components/SelectableImage';\nimport { ALIGNED_FACE_IMAGES, MODELS_URI } from '../const';\nimport { Root } from '../Root';\nimport { MarginTop } from '../styled/MarginTop';\nimport { SideBySide } from '../styled/SideBySide';\n\ntype PageState = {\n  inputImg1?: MediaElement\n  inputImg2?: MediaElement\n}\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SideBySide>\n          <SelectableImage\n            items={ALIGNED_FACE_IMAGES}\n            initialImageSrc={ALIGNED_FACE_IMAGES[30].url}\n            onLoaded={({ img: inputImg1 }) => this.setState({ inputImg1 })}\n            imageStyle={{ maxWidth: 150 }}\n            imgId=\"img1\"\n          />\n          <SelectableImage\n            items={ALIGNED_FACE_IMAGES}\n            initialImageSrc={ALIGNED_FACE_IMAGES[31].url}\n            onLoaded={({ img: inputImg2 }) => this.setState({ inputImg2 })}\n            imageStyle={{ maxWidth: 150 }}\n            imgId=\"img2\"\n          />\n        </SideBySide>\n        <MarginTop>\n          <LoadModels\n            faceRecognitionModelUrl={MODELS_URI}\n            renderBusyComponent={\n              () => <ModalLoader title=\"Loading Face Recognition Model\" />\n            }\n          >\n          {() =>\n            <ComputeFaceDescriptors\n              inputs={[this.state.inputImg1, this.state.inputImg2]}\n              renderBusyComponent={\n                () => <ModalLoader title=\"Computing Face Descriptors\" />\n              }\n            >\n            {({ faceDescriptors }) => {\n              if (!faceDescriptors) {\n                return null\n              }\n\n              const distance = faceapi.euclideanDistance(\n                faceDescriptors[0],\n                faceDescriptors[1]\n              )\n              return (\n                <FaceSimilarity\n                  text={`${faceapi.round(distance)}`}\n                  isMatch={distance < 0.6}\n                />\n              )\n            }}\n            </ComputeFaceDescriptors>\n          }\n          </LoadModels>\n        </MarginTop>\n      </Root>\n    )\n  }\n}","import { Dialog, DialogContent, DialogTitle, LinearProgress } from '@material-ui/core';\nimport * as React from 'react';\n\nexport interface ModalLoaderProps {\n  title: string\n}\n\nexport const ModalLoader = (props: ModalLoaderProps) =>         \n  <Dialog\n    disableBackdropClick\n    disableEscapeKeyDown\n    open={true}\n  >\n    <DialogTitle>\n      { props.title }\n    </DialogTitle>\n    <DialogContent>\n      <LinearProgress />\n    </DialogContent>\n  </Dialog>"],"sourceRoot":""}